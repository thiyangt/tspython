# Time Series Decomposition


```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.seasonal import STL

# Load the AirPassengers dataset
air_passengers = pd.read_csv('data/AirPassengers.csv')
air_passengers['Month'] = pd.to_datetime(air_passengers['Month'])
air_passengers.set_index('Month', inplace=True)

# Perform STL decomposition
stl = STL(air_passengers, seasonal=13)  # The seasonal parameter is chosen based on the periodicity of your data
result = stl.fit()
result
```

## Method 1: Plotting

```{python}
# Plot the original time series, trend, seasonal, and remainder components
fig, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(10, 8), sharex=True)

ax1.plot(air_passengers, label='Original')
ax1.legend()

ax2.plot(result.trend, label='Trend', color='orange')
ax2.legend()

ax3.plot(result.seasonal, label='Seasonal', color='green')
ax3.legend()

ax4.plot(result.resid, label='Residual', color='red')
ax4.legend()

plt.suptitle('STL Decomposition of AirPassengers Dataset')
plt.show()

```

## Method 2: Plotting using plotnine

```{python}
from plotnine import ggplot, aes, geom_line, facet_wrap, ggtitle
# Create a DataFrame for visualization
df_visualization = pd.DataFrame({
    'Date': air_passengers.index,
    'Original': air_passengers['#Passengers'],
    'Trend': result.trend,
    'Seasonal': result.seasonal,
    'Residual': result.resid
})
df_visualization
```

```{python}
# Melt the DataFrame for easier plotting
df_melted = df_visualization.melt(id_vars='Date', var_name='Component', value_name='Value')
df_melted
```

```{python}
# Plot using plotnine
plot = (
    ggplot(df_melted, aes(x='Date', y='Value', color='Component')) +
    geom_line() +
    facet_wrap('~Component', scales='free_y') +
    ggtitle('STL Decomposition of AirPassengers Dataset')
)

# Display the plot
print(plot)

```

```{python}
# Plot using plotnine
plot = (
    ggplot(df_melted, aes(x='Date', y='Value', color='Component')) +
    geom_line() +
    facet_wrap('~Component', scales='free_y', ncol=1) +
    ggtitle('STL Decomposition of AirPassengers Dataset')
)

# Display the plot
print(plot)

```

Task: Take hourly series and perform STL decomposition.

<!--https://github.com/zgana/fpp3-python-readalong-->
